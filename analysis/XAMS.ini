;;
;   Configuration for Nikhef lab H037
;;

[pax]
parent_configuration = "_base"
# Alternate search paths for plugins (none by default):

plugin_paths = ['/home/xams/processed_data']

dsp = [
      'CheckPulses.CheckBounds',
      ;       # Find individual hits
      'HitFinder.FindHits',

      ;       Combine hits into clusters = peaks
      ;       'Cluster.MeanShift',
      'Cluster.GapSize',
      ;       'Cluster.HitDifference',

      # Compute properties for each peak
      'ComputePeakProperties.BasicProperties',
      ;        'ComputePeakProperties.HitpatternSpread',

      # Classify the clusters based on the properties
      'XAMSClassification.XAMSClassification',

      # Make sum waveform for plotting - disable for speed in bulk processing
      'SumWaveform.SumWaveform',

      ]

output = [#'Plotting.PlotEventSummary',
         #'Plotting.PlotChannelWaveforms2D',
         #'Pandas.WritePandas',
         #'BulkOutput.BulkOutput',
         'Avro.WriteAvro',
         #'Pickle.WriteToPickleFile',
         ]

transform = []

input = 'MongoDB.MongoDBInputTriggered'


[MongoDB.MongoDBInputTriggered]
database = "run7"
collection = "measurement029"
;address = "192.168.0.10:27017"
adress = "localhost"
mongo_time_unit = 2 * ns

[DEFAULT]
tpc_name = "XAMS"
channels_top = [0]     # Is actually bottom.. probably
channels_bottom = [3]
channels_in_detector = {
                       'tpc':   [0, 3],
                       'NaI':   [4],
                       }
n_channels = 8

# Time in the event at which trigger occurs. Set to None or leave out if there is no trigger
trigger_time_in_event = 80 * us   # TODO: is this right??

; gains = [2e6 for i in range(8)]
gains = [4e6, 0, 0, 4e6, 4e6, 0, 0, 0]
gain_sigmas = [1e6 for i in range(8)]

; CAEN V1724 used by XENON100 and XENON1T
sample_duration = int(2 * ns)      # int is necessary for data structure
digitizer_voltage_range = 2. * V
digitizer_bits = 14
pmt_circuit_load_resistor = 50 * Ohm
external_amplification = 1

digitizer_reference_baseline = 8000

;[Plotting]
;waveforms_to_plot = ({'internal_name': 'tpc',  'plot_label': 'TPC (raw)'},)
;log_scale_entire_event = False


[BulkOutput.BulkOutput]
output_format = 'hdf5'
buffer_size = 50

fields_to_ignore = [#'occurrences',
                   'sum_waveforms',
                   'channel_waveforms',
                   'all_channel_peaks',
                   'raw_data',
                   ]


[Plotting]
waveforms_to_plot = (
                    {'internal_name': 'tpc',      'plot_label': 'TPC (hits only)',
                    'drawstyle': 'steps', 'color':'black'},
                    {'internal_name': 'tpc_raw',  'plot_label': 'TPC (raw)',
                    'drawstyle': 'steps', 'color':'black', 'alpha': 0.3},
                    #{'internal_name': 'pulse_generator',      'plot_label': 'Pulse Generator (hits only)',
                    #            'drawstyle': 'steps', 'color':'blue'},
                    #{'internal_name': 'pulse_generator_raw',  'plot_label': 'Pulse Generator (raw)',
                    #            'drawstyle': 'steps', 'color':'blue', 'alpha': 0.3},
                    )
log_scale_entire_event = False

[SumWaveform.SumWaveform]
subtract_reference_baseline_only_for_raw_waveform = False


[Plotting.PlotEventSummary]
plot_largest_peaks = False



[HitFinder.FindHits]
# Minimum sigma's above noise level for an excess in a channel to be regarded as a hit:
peak_minimum_sigma = 7 #7 standard value     # 8 sigma gives too many missed hits

# Initial guess for the digitizer baseline during this occurrence; will be refined during hitfinding.
baseline_guess = 16000   # ADC-counts

# Initial guess for the noise_sigma; will be refined during hitfinding.
# If set too high, peaks may not get found; if set too low, spurious peaks may be found in noise.
noise_sigma_guess = 5   # ADC-counts -- not pe/bin anymore!!

# Output peakfinder diagnostic plots to directory
# Warning: this will produce LOTS of plots, processing will be EXTREMELY SLOW
# That's why they're called diagnostic plots...
make_diagnostic_plots = 'never'                 #'always', 'never' (default), or 'no peaks'
make_diagnostic_plots_in = 'diagnostic_plots'

# The algorithm refines its noise_sigma by excluding all samples part of a peak.
# Then peakfinding is repeated, then noise_sigma finding, etc.
# In principle this process is self-stabilizing, so it rarely takes more than 3 or 4 passes.
# In very rare occasions we never settle on peaks and the noise_sigma remains oscillatory.
# To protect against infinite loops, if more than the below number of passes have been done,
#  no new pass is started.
max_passes = 20

# Max hits to look for in each pulse: rest will be ignored
# After large peaks the zero-length encoding can fail, making a huge pulse with many hits
# If set too low, you risk missing some hits in such events.
# If set too high, it will degrade performance (though the effect appears to be small)
# Don't set to infinity though: we need to allocate memory for this...
max_hits_per_pulse = 1000   # Higher: XAMS' S2s contain LOTS of hits, and XAMS has no ZLE


[Cluster]
penalty_per_noise_pulse = 0                 # "pe" equivalent penalty
penalty_per_lone_hit = 0                    # "pe" equivalent penalty
penalty_geq_this_is_suspicious = 3          # "pe" equivalent penalty

# If the ratio of noise channels / contributing channels is larger than this, classify peak as 'noise'
# noise channel = channel in the same detectorwhich shows data but no hit
# (or only hits rejected by the suspicious channel algorithm)
max_noise_channels_over_contributing_channels = 2



[Cluster.GapSize]
# If there is a gap between hits larger than this, it will make a new cluster
large_gap_threshold = 100 * ns

# If the area in a cluster is larger than this, it is certainly not a single electron, so we can use...
transition_point = 100  #pe

# ... a tighter gap threshold:
small_gap_threshold = 50 * ns

[Avro]
# Compression algorithm.
# Can be 'null' (uncompressed, but fastest), 'deflate' (compressed, but slowest), or 'snappy' (middle ground)
codec = 'gzip'
events_per_file = 500
run_number = 5015
compresslevel = 1

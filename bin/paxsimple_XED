#!/usr/bin/env python
from pax import pax

config_overload = """
[pax]
input = 'XED.XedInput'

dsp = ['SimpleDSP.BuildWaveforms',
       'SimpleDSP.ApplyFilters',
       'SimpleDSP.FindPeaks',
       'SimpleDSP.SplitPeaks',
       'SimpleDSP.IdentifyPeaks',
       ]
transform = []

output = [
            'Plotting.PlotWaveform',
            'CSV.WritePeaksCSV',
         ]

[XED.XedInput]
filename = "xe100_120402_2000_000000.xed"
#filename = "xe100_120306_1132_000000.xed"

[SimpleDSP.BuildWaveforms]
baseline_samples_at_start_of_pulse = 46

[SimpleDSP.ApplyFilters]
filters = (
        {'name' : 'tpc_s2',  'source' : 'tpc',  'impulse_response' : (
            0.005452,  0.009142,  0.013074,  0.017179,  0.021381,  0.025597,  0.029746,  0.033740,  0.037499,
            0.040941,  0.043992,  0.046586,  0.048666,  0.050185,  0.051111,  0.051422,  0.051111,  0.050185,
            0.048666,  0.046586,  0.043992,  0.040941,  0.037499,  0.033740,  0.029746,  0.025597,  0.021381,
            0.017179,  0.013074,  0.009142,  0.005452
        )},
        {'name' : 'tpc_s1',  'source' : 'tpc',  'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
        {'name' : 'veto_s1', 'source' : 'veto', 'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
    )

[SimpleDSP.FindPeaks]
peakfinders = [
        {
            'peakfinding_wave'          : 'tpc_s2',
            'unfiltered_wave'           : 'tpc',
            'threshold'                 : 0.15, # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum
        },
        {
            'peakfinding_wave'          : 'tpc_s1',
            'unfiltered_wave'           : 'tpc',
            'threshold'                 : 0.15, # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum
        },
        {
            'peakfinding_wave'          : 'veto_s1',
            'unfiltered_wave'           : 'veto',
            'threshold'                 : 0.15,  # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum
            'ignore_previous_peaks'     : True,
            'peak_label'                : 'veto_s1'
        },
    ]

[SimpleDSP.SplitPeaks]
composite_peak_min_width = 200 #samples     # Only try to split peaks larger than this # of samples
min_p_v_ratio            = 2
min_p_v_distance         = 30 #samples
min_p_v_difference       = 0.5 #pe/bin

[Plotting.PlotWaveform]
waveforms_to_plot = (
        {'internal_name': 'veto', 'plot_label': 'Veto (raw)'},
        {'internal_name': 'tpc',  'plot_label': 'TPC (raw)'},
        {'internal_name': 'tpc_s2',  'plot_label': 'TPC (filtered for s2)'},
        {'internal_name': 'tpc_s1',  'plot_label': 'TPC (filtered for s1)'},
    )

"""

if __name__ == '__main__':
    pax.processor(config_overload)
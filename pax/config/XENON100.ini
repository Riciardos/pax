##
# XENON100-specific configuration settings
##


# This is just for setting up pax
[pax]
parent_configuration = "_base"

dsp = [
       'BuildWaveforms.BuildWaveforms',

       'Filtering.Filtering',

       'BigPeakfinder.FindBigPeaks',

       'BigPeakProcessing.ComputePeakAreasAndCoincidence',
       'BigPeakProcessing.ComputePeakWidths',
       #'BigPeakProcessing.ComputePeakEntropies',
       'BigPeakProcessing.ClassifyBigPeaks',
       'BigPeakProcessing.DeleteSmallPeaks',

       'SmallPeakfinder.FindSmallPeaks',

       'SmallPeakProcessing.ClusterSmallPeaks',
       'SmallPeakProcessing.AdHocClassification',

       ]


[Filtering.Filtering]
simulate_Xerawdp_convolution_bug = False
filters = (
        {'name' : 'tpc_s2',  'source' : 'tpc',  'impulse_response' : (
            0.005452,  0.009142,  0.013074,  0.017179,  0.021381,  0.025597,  0.029746,  0.033740,  0.037499,
            0.040941,  0.043992,  0.046586,  0.048666,  0.050185,  0.051111,  0.051422,  0.051111,  0.050185,
            0.048666,  0.046586,  0.043992,  0.040941,  0.037499,  0.033740,  0.029746,  0.025597,  0.021381,
            0.017179,  0.013074,  0.009142,  0.005452
        )},
        {'name' : 'tpc_s1',  'source' : 'tpc',  'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
        {'name' : 'veto_s1', 'source' : 'veto', 'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
    )


[BigPeakfinder.FindBigPeaks]
# High-statistics peakfinding
peakfinders = [
        {
            'peakfinding_wave'          : 'tpc_s2',
            'unfiltered_wave'           : 'tpc',
            # Find peaks only if peakfinding_wave exceeds the following threshold:
            'threshold'                 : 0.15, # pe/bin
            # For at least this many samples:
            'min_interval_width'        : 30, #samples
            # Try to split the peak into subpeaks if the interval is wider than this many samples:
            'min_split_attempt_width'   : 120, #samples
            # Splitting is done by looking for local maxima ('peaks') and minima ('valleys')
            # If one or no peaks/valley pairs are found, the peak is not split.
            # To eliminate wiggle, cut peaks and valleys intelligently (keep ones with high p/v ratio)
            # until remainin peak/valley pairs satisfy the criteria below:
            'min_p_v_ratio'             : 2,
            'min_p_v_distance'          : 30, #samples
            'min_p_v_difference'        : 0.5, #pe/bin
        },
        {
            'peakfinding_wave'          : 'tpc_s1',
            'unfiltered_wave'           : 'tpc',
            'threshold'                 : 0.15, # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum,
        },
        {
            'peakfinding_wave'          : 'veto_s1',
            'area_threshold'            : 20, # pe/bin
            'unfiltered_wave'           : 'veto',
            'threshold'                 : 0.15,  # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum
        },
    ]

derivative_kernel = [-0.003059, -0.035187, -0.118739, -0.143928, 0.000000, 0.143928, 0.118739, 0.035187, 0.003059]

[BigPeakProcessing.ClassifyBigPeaks]
central_area_ratio = 0.5  #If central_area >= this number * area, it is an S1


[BigPeakProcessing.ComputePeakAreasAndCoincidence]
# A channel counts as 'contributing' if its area within the peak bounds is >= than:
# Note the area is higher than usual (0.35pe), this is for high-energy peaks only
minimum_area = 0.35 #pe

# Width of the central region used in S1/S2 identification
central_area_region_width = 50 * ns


[BigPeakProcessing.ComputePeakEntropies]
normalization_mode = 'square'       # How to convert the signal to positive values: square or abs


[BigPeakProcessing.ComputePeakWidths]
width_computations = {
    'full_width_half_max' : {
        'waveform_to_use' : 'tpc',
        'fraction_of_max' : 0.5,
        'interpolate' :     True,
    },
    'full_width_tenth_max' : {
        'waveform_to_use' : 'tpc',
        'fraction_of_max' : 0.1,
        'interpolate' :     True,
    },
    'full_width_half_max_filtered' : {
        'waveform_to_use' : 'tpc_s2',
        'fraction_of_max' : 0.5,
        'interpolate' :     True,
    },
    'full_width_tenth_max_filtered' : {
        'waveform_to_use' : 'tpc_s2',
        'fraction_of_max' : 0.1,
        'interpolate' :     True,
    }
  }


[BigPeakProcessing.DeleteSmallPeaks]
# Deletes low coincidence peaks, so the low-energy peakfinder can have a crack at them
prune_if_coincidence_lower_than = 7 #contributing PMTs
# Also delete low-area peaks
# Setting this from 100->1000 increased runtime of this plugin by about 50%
# ... it also appears the ad-hoc MAD classification fails on higher peaks... so keep this low.
prune_if_area_lower_than = 100 #pe


[SmallPeakfinder.FindSmallPeaks]
# Minimum sigma's above noise level for an excess in a channel to be regarded as a peak:
peak_minimum_sigma = 5

# Initial guess for the noise_sigma; will be refined during peakfinding.
# If set too high, peaks may not get found; if set too low, spurious peaks may be found in noise.
noise_sigma_guess = 0.05 #pe/bin#

# Stop small peakfinding after a large peak.
# This will increase performance, but you'll lose small S2s in the photo-ionization tail of large events.
# Setting this to 10000 on Ambe 120402's first 100 events more than doubles FindSmallPeaks' speed
give_up_after_peak_of_size = 100000

# Filter each occurrence waveform with a simple impulse response convolution
# It's your job to check this is normalized!
# Based on looking at a few 100 occurences, it looks like a simple sliding window [0.5, 0.5]
# may be slightly better than e.g. [0.8, 0.2]. While [0.8, 0.2] looks more like our peaks, it
# doesn't suppress fluctuating noise as well.
# TODO: This could be studied with the waveform simulator, or looking at lots of diagnostic plots.
filter_to_use = [0.5, 0.5]

# FindSmallPeaks knows how many 'noise occurrences' (occurrences which contain no peaks) there are in each channel
# If a channel includes more than the below number of noise occurrences, it is marked as bad in this event
# This will lead IdentifySmallPeaks to not conside peaks from these channels,
# and cause them to appear grayed out in PlotChannelWaveforms2d)
maximum_noise_occurrences_per_channel = 2

# Output peakfinder diagnostic plots to directory
# Warning: this will produce LOTS of plots, processing will be EXTREMELY SLOW
# That's why they're called diagnostic plots...
# make_diagnostic_plots_in = 'diagnostic_plots'

# The algorithm refines its noise_sigma by excluding all samples part of a peak.
# Then peakfinding is repeated, then noise_sigma finding, etc.
# In principle this process is self-stabilizing, so it rarely takes more than 3 or 4 passes.
# In very rare occasions we never settle on peaks and the noise_sigma remains oscillatory.
# To protect against infinite loops, if more than the below number of passes have been done,
#  no new pass is started, and a loud warning ensues.
# Don't set this too low, or you'll be flooded with warnings.
max_noise_detection_passes = 20

# Method used to compute the noise level
# can be std (for standard deviation) or mad (for median absolute deviation)
# Looks like mad usually gives about 1/3 lower noise level
# Maybe mad is stabler though.. have to test this
noise_determination_method = 'std'


[SmallPeakProcessing.ClusterSmallPeaks]
# If spe peaks are separated by less than this, they will be clustered together
cluster_separation_time = 0.8 * us

# FindSmallPeaks knows how many 'lone pulses' there are in each channel
# If a channel includes more than the below number of lone pulses, it is marked as bad in this event
# This will lead IdentifySmallPeaks to not conside peaks from these channels,
# and cause them to appear grayed out in PlotChannelWaveforms2d)
maximum_lone_pulses_per_channel = 1

exclude_bad_channels = True



# Global settings, passed to every plugin
[DEFAULT]
tpc_name = "XENON100"

# Detector specification
# PlotChannelWaveform2D expects the detector names' lexical order to be the same as the channel order
channels_in_detector = {
    'tpc':   list(range(0,   178+1)),
    'veto':  list(range(179, 242+1)),
    }
n_channels = 242 + 1   # +1 for the fake pmt 0

# PMT numbers for tpc, specified as sets.
# Remember python range does not include endpoint!
# PMT 0 does not exist, its gain is set to 0 later
channels_top = set(range(0,  98 + 1))
channels_bottom = set(range(99, 178 + 1))


# The PMTs below are excluded when peakfinding and computing the areas/widths etc of S1s.
# This has no effect on S2s; the only way to fully disable a channel is to set its gain to 0.
#
# TEMP for XerawDP matching: we need the uncorrected waveform for peakfinding,
# which is only available in JoinAndConvertWaveforms, so it is computed there.
channels_excluded_for_s1 = set([1, 2, 145, 148, 157, 171, 177])

# PMT locations taken from Marc Schumann's pmtpattern code.  Agrees also
# with the top PMT locations used by xerawdp.
# Note: don't forget the units...
pmt_locations =   { 0 : {'x' : 0 * mm, 'y' : 0 * mm},
                    1 : {'x' : -166.84 * mm, 'y' : 0.00 * mm},	2 : {'x' : -163.19 * mm, 'y' : 34.69 * mm},
                    3 : {'x' : -152.42 * mm, 'y' : 67.86 * mm},	4 : {'x' : -134.98 * mm, 'y' : 98.07 * mm},
                    5 : {'x' : -111.64 * mm, 'y' : 123.99 * mm},	6 : {'x' : -83.42 * mm, 'y' : 144.49 * mm},
                    7 : {'x' : -51.56 * mm, 'y' : 158.67 * mm},	8 : {'x' : -17.44 * mm, 'y' : 165.93 * mm},
                    9 : {'x' : 17.44 * mm, 'y' : 165.93 * mm},	10 : {'x' : 51.56 * mm, 'y' : 158.67 * mm},
                    11 : {'x' : 83.42 * mm, 'y' : 144.49 * mm},	12 : {'x' : 111.64 * mm, 'y' : 123.99 * mm},
                    13 : {'x' : 134.98 * mm, 'y' : 98.07 * mm},	14 : {'x' : 152.42 * mm, 'y' : 67.86 * mm},
                    15 : {'x' : 163.19 * mm, 'y' : 34.69 * mm},	16 : {'x' : 166.84 * mm, 'y' : 0.00 * mm},
                    17 : {'x' : 163.19 * mm, 'y' : -34.69 * mm},	18 : {'x' : 152.42 * mm, 'y' : -67.86 * mm},
                    19 : {'x' : 134.98 * mm, 'y' : -98.07 * mm},	20 : {'x' : 111.64 * mm, 'y' : -123.99 * mm},
                    21 : {'x' : 83.42 * mm, 'y' : -144.49 * mm},	22 : {'x' : 51.56 * mm, 'y' : -158.67 * mm},
                    23 : {'x' : 17.44 * mm, 'y' : -165.93 * mm},	24 : {'x' : -17.44 * mm, 'y' : -165.93 * mm},
                    25 : {'x' : -51.56 * mm, 'y' : -158.67 * mm},	26 : {'x' : -83.42 * mm, 'y' : -144.49 * mm},
                    27 : {'x' : -111.64 * mm, 'y' : -123.99 * mm},	28 : {'x' : -134.98 * mm, 'y' : -98.07 * mm},
                    29 : {'x' : -152.42 * mm, 'y' : -67.86 * mm},	30 : {'x' : -163.19 * mm, 'y' : -34.69 * mm},
                    31 : {'x' : -136.53 * mm, 'y' : 0.00 * mm},	32 : {'x' : -131.88 * mm, 'y' : 35.34 * mm},
                    33 : {'x' : -118.24 * mm, 'y' : 68.27 * mm},	34 : {'x' : -96.54 * mm, 'y' : 96.54 * mm},
                    35 : {'x' : -68.27 * mm, 'y' : 118.24 * mm},	36 : {'x' : -35.34 * mm, 'y' : 131.88 * mm},
                    37 : {'x' : 0.00 * mm, 'y' : 136.53 * mm},	38 : {'x' : 35.34 * mm, 'y' : 131.88 * mm},
                    39 : {'x' : 68.27 * mm, 'y' : 118.24 * mm},	40 : {'x' : 96.54 * mm, 'y' : 96.54 * mm},
                    41 : {'x' : 118.24 * mm, 'y' : 68.27 * mm},	42 : {'x' : 131.88 * mm, 'y' : 35.34 * mm},
                    43 : {'x' : 136.53 * mm, 'y' : 0.00 * mm},	44 : {'x' : 131.88 * mm, 'y' : -35.34 * mm},
                    45 : {'x' : 118.24 * mm, 'y' : -68.27 * mm},	46 : {'x' : 96.54 * mm, 'y' : -96.54 * mm},
                    47 : {'x' : 68.27 * mm, 'y' : -118.24 * mm},	48 : {'x' : 35.34 * mm, 'y' : -131.88 * mm},
                    49 : {'x' : 0.00 * mm, 'y' : -136.53 * mm},	50 : {'x' : -35.34 * mm, 'y' : -131.88 * mm},
                    51 : {'x' : -68.27 * mm, 'y' : -118.24 * mm},	52 : {'x' : -96.54 * mm, 'y' : -96.54 * mm},
                    53 : {'x' : -118.24 * mm, 'y' : -68.27 * mm},	54 : {'x' : -131.88 * mm, 'y' : -35.34 * mm},
                    55 : {'x' : -106.20 * mm, 'y' : 0.00 * mm},	56 : {'x' : -101.00 * mm, 'y' : 32.82 * mm},
                    57 : {'x' : -85.92 * mm, 'y' : 62.42 * mm},	58 : {'x' : -62.42 * mm, 'y' : 85.92 * mm},
                    59 : {'x' : -32.82 * mm, 'y' : 101.00 * mm},	60 : {'x' : 0.00 * mm, 'y' : 106.20 * mm},
                    61 : {'x' : 32.82 * mm, 'y' : 101.00 * mm},	62 : {'x' : 62.42 * mm, 'y' : 85.92 * mm},
                    63 : {'x' : 85.92 * mm, 'y' : 62.42 * mm},	64 : {'x' : 101.00 * mm, 'y' : 32.82 * mm},
                    65 : {'x' : 106.20 * mm, 'y' : 0.00 * mm},	66 : {'x' : 101.00 * mm, 'y' : -32.82 * mm},
                    67 : {'x' : 85.92 * mm, 'y' : -62.42 * mm},	68 : {'x' : 62.42 * mm, 'y' : -85.92 * mm},
                    69 : {'x' : 32.82 * mm, 'y' : -101.00 * mm},	70 : {'x' : 0.00 * mm, 'y' : -106.20 * mm},
                    71 : {'x' : -32.82 * mm, 'y' : -101.00 * mm},	72 : {'x' : -62.42 * mm, 'y' : -85.92 * mm},
                    73 : {'x' : -85.92 * mm, 'y' : -62.42 * mm},	74 : {'x' : -101.00 * mm, 'y' : -32.82 * mm},
                    75 : {'x' : -75.87 * mm, 'y' : 0.00 * mm},	76 : {'x' : -68.76 * mm, 'y' : 32.06 * mm},
                    77 : {'x' : -47.75 * mm, 'y' : 58.96 * mm},	78 : {'x' : -17.07 * mm, 'y' : 73.93 * mm},
                    79 : {'x' : 15.77 * mm, 'y' : 74.21 * mm},	80 : {'x' : 46.71 * mm, 'y' : 59.79 * mm},
                    81 : {'x' : 68.19 * mm, 'y' : 33.26 * mm},	82 : {'x' : 75.87 * mm, 'y' : 0.00 * mm},
                    83 : {'x' : 68.76 * mm, 'y' : -32.06 * mm},	84 : {'x' : 47.75 * mm, 'y' : -58.96 * mm},
                    85 : {'x' : 17.07 * mm, 'y' : -73.93 * mm},	86 : {'x' : -15.77 * mm, 'y' : -74.21 * mm},
                    87 : {'x' : -46.71 * mm, 'y' : -59.79 * mm},	88 : {'x' : -68.19 * mm, 'y' : -33.26 * mm},
                    89 : {'x' : -45.00 * mm, 'y' : 0.00 * mm},	90 : {'x' : -30.00 * mm, 'y' : 30.00 * mm},
                    91 : {'x' : 0.00 * mm, 'y' : 45.00 * mm},	92 : {'x' : 30.00 * mm, 'y' : 30.00 * mm},
                    93 : {'x' : 45.00 * mm, 'y' : 0.00 * mm},	94 : {'x' : 30.00 * mm, 'y' : -30.00 * mm},
                    95 : {'x' : 0.00 * mm, 'y' : -45.00 * mm},	96 : {'x' : -30.00 * mm, 'y' : -30.00 * mm},
                    97 : {'x' : -15.00 * mm, 'y' : 0.00 * mm},	98 : {'x' : 15.00 * mm, 'y' : 0.00 * mm},
                    99 : {'x' : 41.15 * mm, 'y' : 123.44 * mm},	100 : {'x' : 13.71 * mm, 'y' : 123.44 * mm},
                    101 : {'x' : -13.71 * mm, 'y' : 123.44 * mm},	102 : {'x' : -41.15 * mm, 'y' : 123.44 * mm},
                    103 : {'x' : 82.29 * mm, 'y' : 96.00 * mm},	104 : {'x' : 54.86 * mm, 'y' : 96.00 * mm},
                    105 : {'x' : 27.43 * mm, 'y' : 96.00 * mm},	106 : {'x' : 0.00 * mm, 'y' : 96.00 * mm},
                    107 : {'x' : -27.43 * mm, 'y' : 96.00 * mm},	108 : {'x' : -54.86 * mm, 'y' : 96.00 * mm},
                    109 : {'x' : -82.29 * mm, 'y' : 96.00 * mm},	110 : {'x' : 109.72 * mm, 'y' : 68.58 * mm},
                    111 : {'x' : 82.29 * mm, 'y' : 68.58 * mm},	112 : {'x' : 54.86 * mm, 'y' : 68.58 * mm},
                    113 : {'x' : 27.43 * mm, 'y' : 68.58 * mm},	114 : {'x' : 0.00 * mm, 'y' : 68.58 * mm},
                    115 : {'x' : -27.43 * mm, 'y' : 68.58 * mm},	116 : {'x' : -54.86 * mm, 'y' : 68.58 * mm},
                    117 : {'x' : -82.29 * mm, 'y' : 68.58 * mm},	118 : {'x' : -109.72 * mm, 'y' : 68.58 * mm},
                    119 : {'x' : 123.44 * mm, 'y' : 41.15 * mm},	120 : {'x' : 96.00 * mm, 'y' : 41.15 * mm},
                    121 : {'x' : 68.58 * mm, 'y' : 41.15 * mm},	122 : {'x' : 41.15 * mm, 'y' : 41.15 * mm},
                    123 : {'x' : 13.71 * mm, 'y' : 41.15 * mm},	124 : {'x' : -13.71 * mm, 'y' : 41.15 * mm},
                    125 : {'x' : -41.15 * mm, 'y' : 41.15 * mm},	126 : {'x' : -68.58 * mm, 'y' : 41.15 * mm},
                    127 : {'x' : -96.00 * mm, 'y' : 41.15 * mm},	128 : {'x' : -123.44 * mm, 'y' : 41.15 * mm},
                    129 : {'x' : 123.44 * mm, 'y' : 13.71 * mm},	130 : {'x' : 96.00 * mm, 'y' : 13.71 * mm},
                    131 : {'x' : 68.58 * mm, 'y' : 13.71 * mm},	132 : {'x' : 41.15 * mm, 'y' : 13.71 * mm},
                    133 : {'x' : 13.71 * mm, 'y' : 13.71 * mm},	134 : {'x' : -13.71 * mm, 'y' : 13.71 * mm},
                    135 : {'x' : -41.15 * mm, 'y' : 13.71 * mm},	136 : {'x' : -68.58 * mm, 'y' : 13.71 * mm},
                    137 : {'x' : -96.00 * mm, 'y' : 13.71 * mm},	138 : {'x' : -123.44 * mm, 'y' : 13.71 * mm},
                    139 : {'x' : 123.44 * mm, 'y' : -13.71 * mm},	140 : {'x' : 96.00 * mm, 'y' : -13.71 * mm},
                    141 : {'x' : 68.58 * mm, 'y' : -13.71 * mm},	142 : {'x' : 41.15 * mm, 'y' : -13.71 * mm},
                    143 : {'x' : 13.71 * mm, 'y' : -13.71 * mm},	144 : {'x' : -13.71 * mm, 'y' : -13.71 * mm},
                    145 : {'x' : -41.15 * mm, 'y' : -13.71 * mm},	146 : {'x' : -68.58 * mm, 'y' : -13.71 * mm},
                    147 : {'x' : -96.00 * mm, 'y' : -13.71 * mm},	148 : {'x' : -123.44 * mm, 'y' : -13.71 * mm},
                    149 : {'x' : 123.44 * mm, 'y' : -41.15 * mm},	150 : {'x' : 96.00 * mm, 'y' : -41.15 * mm},
                    151 : {'x' : 68.58 * mm, 'y' : -41.15 * mm},	152 : {'x' : 41.15 * mm, 'y' : -41.15 * mm},
                    153 : {'x' : 13.71 * mm, 'y' : -41.15 * mm},	154 : {'x' : -13.71 * mm, 'y' : -41.15 * mm},
                    155 : {'x' : -41.15 * mm, 'y' : -41.15 * mm},	156 : {'x' : -68.58 * mm, 'y' : -41.15 * mm},
                    157 : {'x' : -96.00 * mm, 'y' : -41.15 * mm},	158 : {'x' : -123.44 * mm, 'y' : -41.15 * mm},
                    159 : {'x' : 109.72 * mm, 'y' : -68.58 * mm},	160 : {'x' : 82.29 * mm, 'y' : -68.58 * mm},
                    161 : {'x' : 54.86 * mm, 'y' : -68.58 * mm},	162 : {'x' : 27.43 * mm, 'y' : -68.58 * mm},
                    163 : {'x' : 0.00 * mm, 'y' : -68.58 * mm},	164 : {'x' : -27.43 * mm, 'y' : -68.58 * mm},
                    165 : {'x' : -54.86 * mm, 'y' : -68.58 * mm},	166 : {'x' : -82.29 * mm, 'y' : -68.58 * mm},
                    167 : {'x' : -109.72 * mm, 'y' : -68.58 * mm},	168 : {'x' : 82.29 * mm, 'y' : -96.00 * mm},
                    169 : {'x' : 54.86 * mm, 'y' : -96.00 * mm},	170 : {'x' : 27.43 * mm, 'y' : -96.00 * mm},
                    171 : {'x' : 0.00 * mm, 'y' : -96.00 * mm},	172 : {'x' : -27.43 * mm, 'y' : -96.00 * mm},
                    173 : {'x' : -54.86 * mm, 'y' : -96.00 * mm},	174 : {'x' : -82.29 * mm, 'y' : -96.00 * mm},
                    175 : {'x' : 41.15 * mm, 'y' : -123.44 * mm},	176 : {'x' : 13.71 * mm, 'y' : -123.44 * mm},
                    177 : {'x' : -13.71 * mm, 'y' : -123.44 * mm},	178 : {'x' : -41.15 * mm, 'y' : -123.44 * mm},
                    179 : {'x' : -197.15 * mm, 'y' : 0.00 * mm},	180 : {'x' : -193.53 * mm, 'y' : 37.62 * mm},
                    181 : {'x' : -182.79 * mm, 'y' : 73.85 * mm},	182 : {'x' : -165.34 * mm, 'y' : 107.38 * mm},
                    183 : {'x' : -139.41 * mm, 'y' : 139.41 * mm},	184 : {'x' : -110.25 * mm, 'y' : 163.44 * mm},
                    185 : {'x' : -77.03 * mm, 'y' : 181.48 * mm},	186 : {'x' : -40.99 * mm, 'y' : 192.84 * mm},
                    187 : {'x' : 0.00 * mm, 'y' : 197.15 * mm},	188 : {'x' : 37.62 * mm, 'y' : 193.53 * mm},
                    189 : {'x' : 73.85 * mm, 'y' : 182.79 * mm},	190 : {'x' : 107.38 * mm, 'y' : 165.34 * mm},
                    191 : {'x' : 139.41 * mm, 'y' : 139.41 * mm},	192 : {'x' : 163.44 * mm, 'y' : 110.25 * mm},
                    193 : {'x' : 181.48 * mm, 'y' : 77.03 * mm},	194 : {'x' : 192.84 * mm, 'y' : 40.99 * mm},
                    195 : {'x' : 197.15 * mm, 'y' : 0.00 * mm},	196 : {'x' : 193.53 * mm, 'y' : -37.62 * mm},
                    197 : {'x' : 182.79 * mm, 'y' : -73.85 * mm},	198 : {'x' : 165.34 * mm, 'y' : -107.38 * mm},
                    199 : {'x' : 139.41 * mm, 'y' : -139.41 * mm},	200 : {'x' : 110.25 * mm, 'y' : -163.44 * mm},
                    201 : {'x' : 77.03 * mm, 'y' : -181.48 * mm},	202 : {'x' : 40.99 * mm, 'y' : -192.84 * mm},
                    203 : {'x' : 0.00 * mm, 'y' : -197.15 * mm},	204 : {'x' : -37.62 * mm, 'y' : -193.53 * mm},
                    205 : {'x' : -73.85 * mm, 'y' : -182.79 * mm},	206 : {'x' : -107.38 * mm, 'y' : -165.34 * mm},
                    207 : {'x' : -139.41 * mm, 'y' : -139.41 * mm},	208 : {'x' : -163.44 * mm, 'y' : -110.25 * mm},
                    209 : {'x' : -181.48 * mm, 'y' : -77.03 * mm},	210 : {'x' : -192.84 * mm, 'y' : -40.99 * mm},
                    211 : {'x' : 197.15 * mm, 'y' : 0.00 * mm},	212 : {'x' : 193.53 * mm, 'y' : 37.62 * mm},
                    213 : {'x' : 182.79 * mm, 'y' : 73.85 * mm},	214 : {'x' : 165.34 * mm, 'y' : 107.38 * mm},
                    215 : {'x' : 139.41 * mm, 'y' : 139.41 * mm},	216 : {'x' : 110.25 * mm, 'y' : 163.44 * mm},
                    217 : {'x' : 77.03 * mm, 'y' : 181.48 * mm},	218 : {'x' : 40.99 * mm, 'y' : 192.84 * mm},
                    219 : {'x' : 0.00 * mm, 'y' : 197.15 * mm},	220 : {'x' : -37.62 * mm, 'y' : 193.53 * mm},
                    221 : {'x' : -73.85 * mm, 'y' : 182.79 * mm},	222 : {'x' : -107.38 * mm, 'y' : 165.34 * mm},
                    223 : {'x' : -139.41 * mm, 'y' : 139.41 * mm},	224 : {'x' : -163.44 * mm, 'y' : 110.25 * mm},
                    225 : {'x' : -181.48 * mm, 'y' : 77.03 * mm},	226 : {'x' : -192.84 * mm, 'y' : 40.99 * mm},
                    227 : {'x' : -197.15 * mm, 'y' : 0.00 * mm},	228 : {'x' : -193.53 * mm, 'y' : -37.62 * mm},
                    229 : {'x' : -182.79 * mm, 'y' : -73.85 * mm},	230 : {'x' : -165.34 * mm, 'y' : -107.38 * mm},
                    231 : {'x' : -139.41 * mm, 'y' : -139.41 * mm},	232 : {'x' : -110.25 * mm, 'y' : -163.44 * mm},
                    233 : {'x' : -77.03 * mm, 'y' : -181.48 * mm},	234 : {'x' : -40.99 * mm, 'y' : -192.84 * mm},
                    235 : {'x' : 0.00 * mm, 'y' : -197.15 * mm},	236 : {'x' : 37.62 * mm, 'y' : -193.53 * mm},
                    237 : {'x' : 73.85 * mm, 'y' : -182.79 * mm},	238 : {'x' : 107.38 * mm, 'y' : -165.34 * mm},
                    239 : {'x' : 139.41 * mm, 'y' : -139.41 * mm},	240 : {'x' : 163.44 * mm, 'y' : -110.25 * mm},
                    241 : {'x' : 181.48 * mm, 'y' : -77.03 * mm},	242 : {'x' : 192.84 * mm, 'y' : -40.99 * mm},
                    }


# PMT gains
# Extracted from Zurich's Xenon100 PMT gain database using examples/extract_gain
# File used: all120326_1544.gain
# A few of these gains are zero: we'll assume these PMTs are turned off.
# PMT 0 does not exist (real Xenon100 PMTs start from 0), so it gets gain 0.
gains = {
    0:   0,
    1:   2675000.0,   2:   2958000.0,   3:   1936000.0,   4:   2326000.0,   5:   1964000.0,
    6:   1971000.0,   7:   2104000.0,   8:   1999000.0,   9:   0.0,         10:  2102000.0,
    11:  2044000.0,   12:  0.0,         13:  2177000.0,   14:  2180000.0,   15:  2265000.0,
    16:  2293000.0,   17:  2177000.0,   18:  2331000.0,   19:  2099000.0,   20:  2096000.0,
    21:  1899000.0,   22:  2111000.0,   23:  1874000.0,   24:  1948000.0,   25:  2106000.0,
    26:  2121000.0,   27:  1987000.0,   28:  1889000.0,   29:  2473000.0,   30:  2161000.0,
    31:  2192000.0,   32:  2329000.0,   33:  1112000.0,   34:  2157000.0,   35:  2106000.0,
    36:  2182000.0,   37:  2001000.0,   38:  1921000.0,   39:  0.0,         40:  2121000.0,
    41:  1852000.0,   42:  1878000.0,   43:  2088000.0,   44:  1974000.0,   45:  1940000.0,
    46:  2134000.0,   47:  2132000.0,   48:  2018000.0,   49:  2207000.0,   50:  2237000.0,
    51:  2201000.0,   52:  1985000.0,   53:  2173000.0,   54:  2126000.0,   55:  2288000.0,
    56:  2140000.0,   57:  2170000.0,   58:  0.0,         59:  2408000.0,   60:  2253000.0,
    61:  2109000.0,   62:  2134000.0,   63:  1979000.0,   64:  2267000.0,   65:  2149000.0,
    66:  2164000.0,   67:  2077000.0,   68:  2170000.0,   69:  2223000.0,   70:  2325000.0,
    71:  2122000.0,   72:  2343000.0,   73:  2312000.0,   74:  2090000.0,   75:  1944000.0,
    76:  2091000.0,   77:  1948000.0,   78:  1974000.0,   79:  2098000.0,   80:  2134000.0,
    81:  2184000.0,   82:  1992000.0,   83:  2150000.0,   84:  1980000.0,   85:  1878000.0,
    86:  2093000.0,   87:  2162000.0,   88:  1901000.0,   89:  2120000.0,   90:  2059000.0,
    91:  2281000.0,   92:  2214000.0,   93:  2143000.0,   94:  1943000.0,   95:  1934000.0,
    96:  2410000.0,   97:  2227000.0,   98:  1843000.0,   99:  1881000.0,   100: 0.0,
    101: 1965000.0,   102: 2368000.0,   103: 1938000.0,   104: 1981000.0,   105: 0.0,
    106: 1732000.0,   107: 2091000.0,   108: 1932000.0,   109: 2080000.0,   110: 2145000.0,
    111: 1932000.0,   112: 1806000.0,   113: 1939000.0,   114: 1765000.0,   115: 2111000.0,
    116: 2001000.0,   117: 1917000.0,   118: 2082000.0,   119: 2043000.0,   120: 2027000.0,
    121: 1833000.0,   122: 1972000.0,   123: 2030000.0,   124: 2139000.0,   125: 1946000.0,
    126: 1988000.0,   127: 1967000.0,   128: 2190000.0,   129: 2217000.0,   130: 2092000.0,
    131: 2252000.0,   132: 2170000.0,   133: 2014000.0,   134: 1953000.0,   135: 1997000.0,
    136: 1966000.0,   137: 1854000.0,   138: 2098000.0,   139: 1639000.0,   140: 2229000.0,
    141: 1759000.0,   142: 1987000.0,   143: 1911000.0,   144: 1858000.0,   145: 1653000.0,
    146: 2036000.0,   147: 1716000.0,   148: 0.0,         149: 1907000.0,   150: 2165000.0,
    151: 1833000.0,   152: 2126000.0,   153: 2119000.0,   154: 1763000.0,   155: 1990000.0,
    156: 1869000.0,   157: 1874000.0,   158: 2030000.0,   159: 2152000.0,   160: 1917000.0,
    161: 1749000.0,   162: 1668000.0,   163: 2085000.0,   164: 1886000.0,   165: 1692000.0,
    166: 2094000.0,   167: 1446000.0,   168: 1773000.0,   169: 2023000.0,   170: 1737000.0,
    171: 1859000.0,   172: 1887000.0,   173: 1872000.0,   174: 2013000.0,   175: 2078000.0,
    176: 1796000.0,   177: 0.0,         178: 1770000.0,   179: 2018000.0,   180: 2220000.0,
    181: 2544000.0,   182: 978900.0,    183: 1795000.0,   184: 1445000.0,   185: 1988000.0,
    186: 2032000.0,   187: 1915000.0,   188: 2143000.0,   189: 2096000.0,   190: 0.0,
    191: 0.0,         192: 2081000.0,   193: 1730000.0,   194: 1637000.0,   195: 0.0,
    196: 1936000.0,   197: 1665000.0,   198: 1958000.0,   199: 1976000.0,   200: 1975000.0,
    201: 1885000.0,   202: 2101000.0,   203: 2014000.0,   204: 1997000.0,   205: 2001000.0,
    206: 1993000.0,   207: 1915000.0,   208: 2113000.0,   209: 1985000.0,   210: 1813000.0,
    211: 2156000.0,   212: 2041000.0,   213: 2060000.0,   214: 1890000.0,   215: 2162000.0,
    216: 1810000.0,   217: 1988000.0,   218: 1983000.0,   219: 1946000.0,   220: 1941000.0,
    221: 2134000.0,   222: 1829000.0,   223: 1996000.0,   224: 0.0,         225: 1903000.0,
    226: 2096000.0,   227: 2150000.0,   228: 1990000.0,   229: 1949000.0,   230: 1870000.0,
    231: 2070000.0,   232: 1946000.0,   233: 1902000.0,   234: 2128000.0,   235: 0.0,
    236: 1946000.0,   237: 1652000.0,   238: 1986000.0,   239: 1852000.0,   240: 1909000.0,
    241: 1932000.0,   242: 2013000.0,
    }


# Sigmas of the 1pe peak in the gain spectrum, from same file
gain_sigmas = {
    0:   0,
    1:   931800.0,    2:   891900.0,    3:   786300.0,    4:   1035000.0,   5:   947800.0,
    6:   932700.0,    7:   1167000.0,   8:   976400.0,    9:   0.0,         10:  1154000.0,
    11:  1168000.0,   12:  0.0,         13:  956500.0,    14:  1235000.0,   15:  1250000.0,
    16:  1611000.0,   17:  1203000.0,   18:  1084000.0,   19:  1333000.0,   20:  1006000.0,
    21:  1051000.0,   22:  935600.0,    23:  1014000.0,   24:  1281000.0,   25:  1147000.0,
    26:  608800.0,    27:  941200.0,    28:  959700.0,    29:  1464000.0,   30:  1180000.0,
    31:  1186000.0,   32:  1244000.0,   33:  542500.0,    34:  1146000.0,   35:  951200.0,
    36:  1274000.0,   37:  1075000.0,   38:  1181000.0,   39:  0.0,         40:  1153000.0,
    41:  895700.0,    42:  921500.0,    43:  1106000.0,   44:  997000.0,    45:  1030000.0,
    46:  1116000.0,   47:  1167000.0,   48:  1112000.0,   49:  1172000.0,   50:  1327000.0,
    51:  1134000.0,   52:  978500.0,    53:  1070000.0,   54:  1114000.0,   55:  1229000.0,
    56:  1102000.0,   57:  1065000.0,   58:  0.0,         59:  1193000.0,   60:  1194000.0,
    61:  1142000.0,   62:  1117000.0,   63:  1079000.0,   64:  1333000.0,   65:  1079000.0,
    66:  1165000.0,   67:  1080000.0,   68:  1107000.0,   69:  1293000.0,   70:  1248000.0,
    71:  1303000.0,   72:  1227000.0,   73:  1224000.0,   74:  1048000.0,   75:  930300.0,
    76:  1351000.0,   77:  1056000.0,   78:  997500.0,    79:  1203000.0,   80:  1210000.0,
    81:  1033000.0,   82:  1050000.0,   83:  1300000.0,   84:  1042000.0,   85:  1110000.0,
    86:  1106000.0,   87:  1326000.0,   88:  1185000.0,   89:  1261000.0,   90:  1136000.0,
    91:  1212000.0,   92:  1210000.0,   93:  1281000.0,   94:  1270000.0,   95:  1141000.0,
    96:  1374000.0,   97:  1220000.0,   98:  993000.0,    99:  1221000.0,   100: 0.0,
    101: 1010000.0,   102: 1248000.0,   103: 924900.0,    104: 975400.0,    105: 0.0,
    106: 908800.0,    107: 1026000.0,   108: 1039000.0,   109: 985600.0,    110: 1290000.0,
    111: 1271000.0,   112: 1054000.0,   113: 941500.0,    114: 988600.0,    115: 1087000.0,
    116: 1030000.0,   117: 880400.0,    118: 870500.0,    119: 991400.0,    120: 899400.0,
    121: 878000.0,    122: 991800.0,    123: 1090000.0,   124: 1113000.0,   125: 936000.0,
    126: 957700.0,    127: 940200.0,    128: 1219000.0,   129: 1326000.0,   130: 1234000.0,
    131: 1212000.0,   132: 1184000.0,   133: 974400.0,    134: 942600.0,    135: 929500.0,
    136: 1023000.0,   137: 1037000.0,   138: 950000.0,    139: 1064000.0,   140: 1151000.0,
    141: 881900.0,    142: 960500.0,    143: 879600.0,    144: 907300.0,    145: 948400.0,
    146: 834400.0,    147: 966800.0,    148: 0.0,         149: 926600.0,    150: 906700.0,
    151: 872100.0,    152: 859100.0,    153: 976100.0,    154: 747200.0,    155: 839000.0,
    156: 943700.0,    157: 1224000.0,   158: 1071000.0,   159: 1123000.0,   160: 814200.0,
    161: 888900.0,    162: 1000000.0,   163: 991900.0,    164: 873800.0,    165: 917900.0,
    166: 875000.0,    167: 736700.0,    168: 1083000.0,   169: 822400.0,    170: 1020000.0,
    171: 1088000.0,   172: 1069000.0,   173: 863000.0,    174: 925700.0,    175: 939000.0,
    176: 1114000.0,   177: 0.0,         178: 927100.0,    179: 851500.0,    180: 920800.0,
    181: 1285000.0,   182: 874700.0,    183: 1045000.0,   184: 746600.0,    185: 1415000.0,
    186: 895900.0,    187: 1191000.0,   188: 982100.0,    189: 900900.0,    190: 0.0,
    191: 0.0,         192: 1268000.0,   193: 1362000.0,   194: 1308000.0,   195: 0.0,
    196: 1287000.0,   197: 1156000.0,   198: 1169000.0,   199: 1411000.0,   200: 1127000.0,
    201: 876800.0,    202: 1350000.0,   203: 1131000.0,   204: 1249000.0,   205: 1477000.0,
    206: 1218000.0,   207: 1122000.0,   208: 1093000.0,   209: 1275000.0,   210: 894900.0,
    211: 928500.0,    212: 1045000.0,   213: 1009000.0,   214: 894700.0,    215: 885000.0,
    216: 947500.0,    217: 991300.0,    218: 1087000.0,   219: 1160000.0,   220: 1138000.0,
    221: 1124000.0,   222: 1156000.0,   223: 1090000.0,   224: 0.0,         225: 944000.0,
    226: 1113000.0,   227: 1335000.0,   228: 1182000.0,   229: 983200.0,    230: 1153000.0,
    231: 1335000.0,   232: 1344000.0,   233: 1103000.0,   234: 1288000.0,   235: 0.0,
    236: 1173000.0,   237: 1226000.0,   238: 942800.0,    239: 1117000.0,   240: 1182000.0,
    241: 1042000.0,   242: 1096000.0,
    }
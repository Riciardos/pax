##
# XENON100-specific configuration settings
##


# This is just for setting up pax
[pax]
parent_configuration = "_base"

dsp = [
       'BuildWaveforms.BuildWaveforms',

       'Filtering.Filtering',

       'BigPeakfinder.FindBigPeaks',

       'BigPeakProcessing.ComputePeakAreasAndCoincidence',
       'BigPeakProcessing.ComputePeakWidths',
       #'BigPeakProcessing.ComputePeakEntropies',
       'BigPeakProcessing.ClassifyBigPeaks',
       'BigPeakProcessing.DeleteSmallPeaks',

       'SmallPeakfinder.FindSmallPeaks',

       'SmallPeakProcessing.ClusterSmallPeaks',
       'SmallPeakProcessing.AdHocClassification',

       ]


[Filtering.Filtering]
simulate_Xerawdp_convolution_bug = False
filters = (
        {'name' : 'tpc_s2',  'source' : 'tpc',  'impulse_response' : (
            0.005452,  0.009142,  0.013074,  0.017179,  0.021381,  0.025597,  0.029746,  0.033740,  0.037499,
            0.040941,  0.043992,  0.046586,  0.048666,  0.050185,  0.051111,  0.051422,  0.051111,  0.050185,
            0.048666,  0.046586,  0.043992,  0.040941,  0.037499,  0.033740,  0.029746,  0.025597,  0.021381,
            0.017179,  0.013074,  0.009142,  0.005452
        )},
        {'name' : 'tpc_s1',  'source' : 'tpc',  'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
        {'name' : 'veto_s1', 'source' : 'veto', 'impulse_response' : (
            0.05, 0.1, 0.2, 0.3, 0.2, 0.1, 0.05
        )},
    )


[BigPeakfinder.FindBigPeaks]
# High-statistics peakfinding
peakfinders = [
        {
            'peakfinding_wave'          : 'tpc_s2',
            'unfiltered_wave'           : 'tpc',
            # Find peaks only if peakfinding_wave exceeds the following threshold:
            'threshold'                 : 0.15, # pe/bin
            # For at least this many samples:
            'min_interval_width'        : 30, #samples
            # Try to split the peak into subpeaks if the interval is wider than this many samples:
            'min_split_attempt_width'   : 120, #samples
            # Splitting is done by looking for local maxima ('peaks') and minima ('valleys')
            # If one or no peaks/valley pairs are found, the peak is not split.
            # To eliminate wiggle, cut peaks and valleys intelligently (keep ones with high p/v ratio)
            # until remainin peak/valley pairs satisfy the criteria below:
            'min_p_v_ratio'             : 2,
            'min_p_v_distance'          : 30, #samples
            'min_p_v_difference'        : 0.5, #pe/bin
        },
        {
            'peakfinding_wave'          : 'tpc_s1',
            'unfiltered_wave'           : 'tpc',
            'threshold'                 : 0.15, # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum,
        },
        {
            'peakfinding_wave'          : 'veto_s1',
            'area_threshold'            : 20, # pe/bin
            'unfiltered_wave'           : 'veto',
            'threshold'                 : 0.15,  # pe/bin
            'peak_integration_bound'    : 0.01, # of maximum
        },
    ]

derivative_kernel = [-0.003059, -0.035187, -0.118739, -0.143928, 0.000000, 0.143928, 0.118739, 0.035187, 0.003059]

[BigPeakProcessing.ClassifyBigPeaks]
central_area_ratio = 0.5  #If central_area >= this number * area, it is an S1


[BigPeakProcessing.ComputePeakAreasAndCoincidence]
# A channel counts as 'contributing' if its area within the peak bounds is >= than:
# Note the area is higher than usual (0.35pe), this is for high-energy peaks only
minimum_area = 0.35 #pe

# Width of the central region used in S1/S2 identification
central_area_region_width = 50 * ns


[BigPeakProcessing.ComputePeakEntropies]
normalization_mode = 'square'       # How to convert the signal to positive values: square or abs


[BigPeakProcessing.ComputePeakWidths]
width_computations = {
    'full_width_half_max' : {
        'waveform_to_use' : 'tpc',
        'fraction_of_max' : 0.5,
        'interpolate' :     True,
    },
    'full_width_tenth_max' : {
        'waveform_to_use' : 'tpc',
        'fraction_of_max' : 0.1,
        'interpolate' :     True,
    },
    'full_width_half_max_filtered' : {
        'waveform_to_use' : 'tpc_s2',
        'fraction_of_max' : 0.5,
        'interpolate' :     True,
    },
    'full_width_tenth_max_filtered' : {
        'waveform_to_use' : 'tpc_s2',
        'fraction_of_max' : 0.1,
        'interpolate' :     True,
    }
  }


[BigPeakProcessing.DeleteSmallPeaks]
# Deletes low coincidence peaks, so the low-energy peakfinder can have a crack at them
prune_if_coincidence_lower_than = 7 #contributing PMTs
# Also delete low-area peaks
# Setting this from 100->1000 increased runtime of this plugin by about 50%
# ... it also appears the ad-hoc MAD classification fails on higher peaks... so keep this low.
prune_if_area_lower_than = 100 #pe


[SmallPeakfinder.FindSmallPeaks]
# Minimum sigma's above noise level for an excess in a channel to be regarded as a peak:
peak_minimum_sigma = 5

# Initial guess for the noise_sigma; will be refined during peakfinding.
# If set too high, peaks may not get found; if set too low, spurious peaks may be found in noise.
noise_sigma_guess = 0.05 #pe/bin#

# Stop small peakfinding after a large peak.
# This will increase performance, but you'll lose small S2s in the photo-ionization tail of large events.
# Setting this to 10000 on Ambe 120402's first 100 events more than doubles FindSmallPeaks' speed
give_up_after_peak_of_size = 100000

# Filter each occurrence waveform with a simple impulse response convolution
# It's your job to check this is normalized!
# Based on looking at a few 100 occurences, it looks like a simple sliding window [0.5, 0.5]
# may be slightly better than e.g. [0.8, 0.2]. While [0.8, 0.2] looks more like our peaks, it
# doesn't suppress fluctuating noise as well.
# TODO: This could be studied with the waveform simulator, or looking at lots of diagnostic plots.
filter_to_use = [0.5, 0.5]

# FindSmallPeaks knows how many 'noise occurrences' (occurrences which contain no peaks) there are in each channel
# If a channel includes more than the below number of noise occurrences, it is marked as bad in this event
# This will lead IdentifySmallPeaks to not conside peaks from these channels,
# and cause them to appear grayed out in PlotChannelWaveforms2d)
maximum_noise_occurrences_per_channel = 2

# Output peakfinder diagnostic plots to directory
# Warning: this will produce LOTS of plots, processing will be EXTREMELY SLOW
# That's why they're called diagnostic plots...
# make_diagnostic_plots_in = 'diagnostic_plots'

# The algorithm refines its noise_sigma by excluding all samples part of a peak.
# Then peakfinding is repeated, then noise_sigma finding, etc.
# In principle this process is self-stabilizing, so it rarely takes more than 3 or 4 passes.
# In very rare occasions we never settle on peaks and the noise_sigma remains oscillatory.
# To protect against infinite loops, if more than the below number of passes have been done,
#  no new pass is started, and a loud warning ensues.
# Don't set this too low, or you'll be flooded with warnings.
max_noise_detection_passes = 20

# Method used to compute the noise level
# can be std (for standard deviation) or mad (for median absolute deviation)
# Looks like mad usually gives about 1/3 lower noise level
# Maybe mad is stabler though.. have to test this
noise_determination_method = 'std'


[SmallPeakProcessing.ClusterSmallPeaks]
# If spe peaks are separated by less than this, they will be clustered together
cluster_separation_time = 0.8 * us

# FindSmallPeaks knows how many 'lone pulses' there are in each channel
# If a channel includes more than the below number of lone pulses, it is marked as bad in this event
# This will lead IdentifySmallPeaks to not conside peaks from these channels,
# and cause them to appear grayed out in PlotChannelWaveforms2d)
maximum_lone_pulses_per_channel = 1

exclude_bad_channels = True



# Global settings, passed to every plugin
[DEFAULT]
tpc_name = "XENON100"

# Detector specification
# PlotChannelWaveform2D expects the detector names' lexical order to be the same as the channel order
channels_in_detector = {
    'tpc':   np.arange(0,   178+1),
    'veto':  np.arange(179, 242+1),
    }
n_channels = 242 + 1   # +1 for the fake pmt 0

# PMT numbers for tpc, specified as sets.
# Remember python range does not include endpoint!
# PMT 0 does not exist, its gain is set to 0 later
channels_top = set(range(0,  98 + 1))
channels_bottom = set(range(99, 178 + 1))


# The PMTs below are excluded when peakfinding and computing the areas/widths etc of S1s.
# This has no effect on S2s; the only way to fully disable a channel is to set its gain to 0.
#
# TEMP for XerawDP matching: we need the uncorrected waveform for peakfinding,
# which is only available in JoinAndConvertWaveforms, so it is computed there.
channels_excluded_for_s1 = set([1, 2, 145, 148, 157, 171, 177])

# PMT locations taken from Marc Schumann's pmtpattern code.  Agrees also
# with the top PMT locations used by xerawdp.
# Note: don't forget the units...
pmt_locations =   { 0 : {'x' : 0 * mm, 'y' : 0 * mm},
                    1 : {'x' : -166.84 * mm, 'y' : 0.00 * mm},	2 : {'x' : -163.19 * mm, 'y' : 34.69 * mm},
                    3 : {'x' : -152.42 * mm, 'y' : 67.86 * mm},	4 : {'x' : -134.98 * mm, 'y' : 98.07 * mm},
                    5 : {'x' : -111.64 * mm, 'y' : 123.99 * mm},	6 : {'x' : -83.42 * mm, 'y' : 144.49 * mm},
                    7 : {'x' : -51.56 * mm, 'y' : 158.67 * mm},	8 : {'x' : -17.44 * mm, 'y' : 165.93 * mm},
                    9 : {'x' : 17.44 * mm, 'y' : 165.93 * mm},	10 : {'x' : 51.56 * mm, 'y' : 158.67 * mm},
                    11 : {'x' : 83.42 * mm, 'y' : 144.49 * mm},	12 : {'x' : 111.64 * mm, 'y' : 123.99 * mm},
                    13 : {'x' : 134.98 * mm, 'y' : 98.07 * mm},	14 : {'x' : 152.42 * mm, 'y' : 67.86 * mm},
                    15 : {'x' : 163.19 * mm, 'y' : 34.69 * mm},	16 : {'x' : 166.84 * mm, 'y' : 0.00 * mm},
                    17 : {'x' : 163.19 * mm, 'y' : -34.69 * mm},	18 : {'x' : 152.42 * mm, 'y' : -67.86 * mm},
                    19 : {'x' : 134.98 * mm, 'y' : -98.07 * mm},	20 : {'x' : 111.64 * mm, 'y' : -123.99 * mm},
                    21 : {'x' : 83.42 * mm, 'y' : -144.49 * mm},	22 : {'x' : 51.56 * mm, 'y' : -158.67 * mm},
                    23 : {'x' : 17.44 * mm, 'y' : -165.93 * mm},	24 : {'x' : -17.44 * mm, 'y' : -165.93 * mm},
                    25 : {'x' : -51.56 * mm, 'y' : -158.67 * mm},	26 : {'x' : -83.42 * mm, 'y' : -144.49 * mm},
                    27 : {'x' : -111.64 * mm, 'y' : -123.99 * mm},	28 : {'x' : -134.98 * mm, 'y' : -98.07 * mm},
                    29 : {'x' : -152.42 * mm, 'y' : -67.86 * mm},	30 : {'x' : -163.19 * mm, 'y' : -34.69 * mm},
                    31 : {'x' : -136.53 * mm, 'y' : 0.00 * mm},	32 : {'x' : -131.88 * mm, 'y' : 35.34 * mm},
                    33 : {'x' : -118.24 * mm, 'y' : 68.27 * mm},	34 : {'x' : -96.54 * mm, 'y' : 96.54 * mm},
                    35 : {'x' : -68.27 * mm, 'y' : 118.24 * mm},	36 : {'x' : -35.34 * mm, 'y' : 131.88 * mm},
                    37 : {'x' : 0.00 * mm, 'y' : 136.53 * mm},	38 : {'x' : 35.34 * mm, 'y' : 131.88 * mm},
                    39 : {'x' : 68.27 * mm, 'y' : 118.24 * mm},	40 : {'x' : 96.54 * mm, 'y' : 96.54 * mm},
                    41 : {'x' : 118.24 * mm, 'y' : 68.27 * mm},	42 : {'x' : 131.88 * mm, 'y' : 35.34 * mm},
                    43 : {'x' : 136.53 * mm, 'y' : 0.00 * mm},	44 : {'x' : 131.88 * mm, 'y' : -35.34 * mm},
                    45 : {'x' : 118.24 * mm, 'y' : -68.27 * mm},	46 : {'x' : 96.54 * mm, 'y' : -96.54 * mm},
                    47 : {'x' : 68.27 * mm, 'y' : -118.24 * mm},	48 : {'x' : 35.34 * mm, 'y' : -131.88 * mm},
                    49 : {'x' : 0.00 * mm, 'y' : -136.53 * mm},	50 : {'x' : -35.34 * mm, 'y' : -131.88 * mm},
                    51 : {'x' : -68.27 * mm, 'y' : -118.24 * mm},	52 : {'x' : -96.54 * mm, 'y' : -96.54 * mm},
                    53 : {'x' : -118.24 * mm, 'y' : -68.27 * mm},	54 : {'x' : -131.88 * mm, 'y' : -35.34 * mm},
                    55 : {'x' : -106.20 * mm, 'y' : 0.00 * mm},	56 : {'x' : -101.00 * mm, 'y' : 32.82 * mm},
                    57 : {'x' : -85.92 * mm, 'y' : 62.42 * mm},	58 : {'x' : -62.42 * mm, 'y' : 85.92 * mm},
                    59 : {'x' : -32.82 * mm, 'y' : 101.00 * mm},	60 : {'x' : 0.00 * mm, 'y' : 106.20 * mm},
                    61 : {'x' : 32.82 * mm, 'y' : 101.00 * mm},	62 : {'x' : 62.42 * mm, 'y' : 85.92 * mm},
                    63 : {'x' : 85.92 * mm, 'y' : 62.42 * mm},	64 : {'x' : 101.00 * mm, 'y' : 32.82 * mm},
                    65 : {'x' : 106.20 * mm, 'y' : 0.00 * mm},	66 : {'x' : 101.00 * mm, 'y' : -32.82 * mm},
                    67 : {'x' : 85.92 * mm, 'y' : -62.42 * mm},	68 : {'x' : 62.42 * mm, 'y' : -85.92 * mm},
                    69 : {'x' : 32.82 * mm, 'y' : -101.00 * mm},	70 : {'x' : 0.00 * mm, 'y' : -106.20 * mm},
                    71 : {'x' : -32.82 * mm, 'y' : -101.00 * mm},	72 : {'x' : -62.42 * mm, 'y' : -85.92 * mm},
                    73 : {'x' : -85.92 * mm, 'y' : -62.42 * mm},	74 : {'x' : -101.00 * mm, 'y' : -32.82 * mm},
                    75 : {'x' : -75.87 * mm, 'y' : 0.00 * mm},	76 : {'x' : -68.76 * mm, 'y' : 32.06 * mm},
                    77 : {'x' : -47.75 * mm, 'y' : 58.96 * mm},	78 : {'x' : -17.07 * mm, 'y' : 73.93 * mm},
                    79 : {'x' : 15.77 * mm, 'y' : 74.21 * mm},	80 : {'x' : 46.71 * mm, 'y' : 59.79 * mm},
                    81 : {'x' : 68.19 * mm, 'y' : 33.26 * mm},	82 : {'x' : 75.87 * mm, 'y' : 0.00 * mm},
                    83 : {'x' : 68.76 * mm, 'y' : -32.06 * mm},	84 : {'x' : 47.75 * mm, 'y' : -58.96 * mm},
                    85 : {'x' : 17.07 * mm, 'y' : -73.93 * mm},	86 : {'x' : -15.77 * mm, 'y' : -74.21 * mm},
                    87 : {'x' : -46.71 * mm, 'y' : -59.79 * mm},	88 : {'x' : -68.19 * mm, 'y' : -33.26 * mm},
                    89 : {'x' : -45.00 * mm, 'y' : 0.00 * mm},	90 : {'x' : -30.00 * mm, 'y' : 30.00 * mm},
                    91 : {'x' : 0.00 * mm, 'y' : 45.00 * mm},	92 : {'x' : 30.00 * mm, 'y' : 30.00 * mm},
                    93 : {'x' : 45.00 * mm, 'y' : 0.00 * mm},	94 : {'x' : 30.00 * mm, 'y' : -30.00 * mm},
                    95 : {'x' : 0.00 * mm, 'y' : -45.00 * mm},	96 : {'x' : -30.00 * mm, 'y' : -30.00 * mm},
                    97 : {'x' : -15.00 * mm, 'y' : 0.00 * mm},	98 : {'x' : 15.00 * mm, 'y' : 0.00 * mm},
                    99 : {'x' : 41.15 * mm, 'y' : 123.44 * mm},	100 : {'x' : 13.71 * mm, 'y' : 123.44 * mm},
                    101 : {'x' : -13.71 * mm, 'y' : 123.44 * mm},	102 : {'x' : -41.15 * mm, 'y' : 123.44 * mm},
                    103 : {'x' : 82.29 * mm, 'y' : 96.00 * mm},	104 : {'x' : 54.86 * mm, 'y' : 96.00 * mm},
                    105 : {'x' : 27.43 * mm, 'y' : 96.00 * mm},	106 : {'x' : 0.00 * mm, 'y' : 96.00 * mm},
                    107 : {'x' : -27.43 * mm, 'y' : 96.00 * mm},	108 : {'x' : -54.86 * mm, 'y' : 96.00 * mm},
                    109 : {'x' : -82.29 * mm, 'y' : 96.00 * mm},	110 : {'x' : 109.72 * mm, 'y' : 68.58 * mm},
                    111 : {'x' : 82.29 * mm, 'y' : 68.58 * mm},	112 : {'x' : 54.86 * mm, 'y' : 68.58 * mm},
                    113 : {'x' : 27.43 * mm, 'y' : 68.58 * mm},	114 : {'x' : 0.00 * mm, 'y' : 68.58 * mm},
                    115 : {'x' : -27.43 * mm, 'y' : 68.58 * mm},	116 : {'x' : -54.86 * mm, 'y' : 68.58 * mm},
                    117 : {'x' : -82.29 * mm, 'y' : 68.58 * mm},	118 : {'x' : -109.72 * mm, 'y' : 68.58 * mm},
                    119 : {'x' : 123.44 * mm, 'y' : 41.15 * mm},	120 : {'x' : 96.00 * mm, 'y' : 41.15 * mm},
                    121 : {'x' : 68.58 * mm, 'y' : 41.15 * mm},	122 : {'x' : 41.15 * mm, 'y' : 41.15 * mm},
                    123 : {'x' : 13.71 * mm, 'y' : 41.15 * mm},	124 : {'x' : -13.71 * mm, 'y' : 41.15 * mm},
                    125 : {'x' : -41.15 * mm, 'y' : 41.15 * mm},	126 : {'x' : -68.58 * mm, 'y' : 41.15 * mm},
                    127 : {'x' : -96.00 * mm, 'y' : 41.15 * mm},	128 : {'x' : -123.44 * mm, 'y' : 41.15 * mm},
                    129 : {'x' : 123.44 * mm, 'y' : 13.71 * mm},	130 : {'x' : 96.00 * mm, 'y' : 13.71 * mm},
                    131 : {'x' : 68.58 * mm, 'y' : 13.71 * mm},	132 : {'x' : 41.15 * mm, 'y' : 13.71 * mm},
                    133 : {'x' : 13.71 * mm, 'y' : 13.71 * mm},	134 : {'x' : -13.71 * mm, 'y' : 13.71 * mm},
                    135 : {'x' : -41.15 * mm, 'y' : 13.71 * mm},	136 : {'x' : -68.58 * mm, 'y' : 13.71 * mm},
                    137 : {'x' : -96.00 * mm, 'y' : 13.71 * mm},	138 : {'x' : -123.44 * mm, 'y' : 13.71 * mm},
                    139 : {'x' : 123.44 * mm, 'y' : -13.71 * mm},	140 : {'x' : 96.00 * mm, 'y' : -13.71 * mm},
                    141 : {'x' : 68.58 * mm, 'y' : -13.71 * mm},	142 : {'x' : 41.15 * mm, 'y' : -13.71 * mm},
                    143 : {'x' : 13.71 * mm, 'y' : -13.71 * mm},	144 : {'x' : -13.71 * mm, 'y' : -13.71 * mm},
                    145 : {'x' : -41.15 * mm, 'y' : -13.71 * mm},	146 : {'x' : -68.58 * mm, 'y' : -13.71 * mm},
                    147 : {'x' : -96.00 * mm, 'y' : -13.71 * mm},	148 : {'x' : -123.44 * mm, 'y' : -13.71 * mm},
                    149 : {'x' : 123.44 * mm, 'y' : -41.15 * mm},	150 : {'x' : 96.00 * mm, 'y' : -41.15 * mm},
                    151 : {'x' : 68.58 * mm, 'y' : -41.15 * mm},	152 : {'x' : 41.15 * mm, 'y' : -41.15 * mm},
                    153 : {'x' : 13.71 * mm, 'y' : -41.15 * mm},	154 : {'x' : -13.71 * mm, 'y' : -41.15 * mm},
                    155 : {'x' : -41.15 * mm, 'y' : -41.15 * mm},	156 : {'x' : -68.58 * mm, 'y' : -41.15 * mm},
                    157 : {'x' : -96.00 * mm, 'y' : -41.15 * mm},	158 : {'x' : -123.44 * mm, 'y' : -41.15 * mm},
                    159 : {'x' : 109.72 * mm, 'y' : -68.58 * mm},	160 : {'x' : 82.29 * mm, 'y' : -68.58 * mm},
                    161 : {'x' : 54.86 * mm, 'y' : -68.58 * mm},	162 : {'x' : 27.43 * mm, 'y' : -68.58 * mm},
                    163 : {'x' : 0.00 * mm, 'y' : -68.58 * mm},	164 : {'x' : -27.43 * mm, 'y' : -68.58 * mm},
                    165 : {'x' : -54.86 * mm, 'y' : -68.58 * mm},	166 : {'x' : -82.29 * mm, 'y' : -68.58 * mm},
                    167 : {'x' : -109.72 * mm, 'y' : -68.58 * mm},	168 : {'x' : 82.29 * mm, 'y' : -96.00 * mm},
                    169 : {'x' : 54.86 * mm, 'y' : -96.00 * mm},	170 : {'x' : 27.43 * mm, 'y' : -96.00 * mm},
                    171 : {'x' : 0.00 * mm, 'y' : -96.00 * mm},	172 : {'x' : -27.43 * mm, 'y' : -96.00 * mm},
                    173 : {'x' : -54.86 * mm, 'y' : -96.00 * mm},	174 : {'x' : -82.29 * mm, 'y' : -96.00 * mm},
                    175 : {'x' : 41.15 * mm, 'y' : -123.44 * mm},	176 : {'x' : 13.71 * mm, 'y' : -123.44 * mm},
                    177 : {'x' : -13.71 * mm, 'y' : -123.44 * mm},	178 : {'x' : -41.15 * mm, 'y' : -123.44 * mm},
                    179 : {'x' : -197.15 * mm, 'y' : 0.00 * mm},	180 : {'x' : -193.53 * mm, 'y' : 37.62 * mm},
                    181 : {'x' : -182.79 * mm, 'y' : 73.85 * mm},	182 : {'x' : -165.34 * mm, 'y' : 107.38 * mm},
                    183 : {'x' : -139.41 * mm, 'y' : 139.41 * mm},	184 : {'x' : -110.25 * mm, 'y' : 163.44 * mm},
                    185 : {'x' : -77.03 * mm, 'y' : 181.48 * mm},	186 : {'x' : -40.99 * mm, 'y' : 192.84 * mm},
                    187 : {'x' : 0.00 * mm, 'y' : 197.15 * mm},	188 : {'x' : 37.62 * mm, 'y' : 193.53 * mm},
                    189 : {'x' : 73.85 * mm, 'y' : 182.79 * mm},	190 : {'x' : 107.38 * mm, 'y' : 165.34 * mm},
                    191 : {'x' : 139.41 * mm, 'y' : 139.41 * mm},	192 : {'x' : 163.44 * mm, 'y' : 110.25 * mm},
                    193 : {'x' : 181.48 * mm, 'y' : 77.03 * mm},	194 : {'x' : 192.84 * mm, 'y' : 40.99 * mm},
                    195 : {'x' : 197.15 * mm, 'y' : 0.00 * mm},	196 : {'x' : 193.53 * mm, 'y' : -37.62 * mm},
                    197 : {'x' : 182.79 * mm, 'y' : -73.85 * mm},	198 : {'x' : 165.34 * mm, 'y' : -107.38 * mm},
                    199 : {'x' : 139.41 * mm, 'y' : -139.41 * mm},	200 : {'x' : 110.25 * mm, 'y' : -163.44 * mm},
                    201 : {'x' : 77.03 * mm, 'y' : -181.48 * mm},	202 : {'x' : 40.99 * mm, 'y' : -192.84 * mm},
                    203 : {'x' : 0.00 * mm, 'y' : -197.15 * mm},	204 : {'x' : -37.62 * mm, 'y' : -193.53 * mm},
                    205 : {'x' : -73.85 * mm, 'y' : -182.79 * mm},	206 : {'x' : -107.38 * mm, 'y' : -165.34 * mm},
                    207 : {'x' : -139.41 * mm, 'y' : -139.41 * mm},	208 : {'x' : -163.44 * mm, 'y' : -110.25 * mm},
                    209 : {'x' : -181.48 * mm, 'y' : -77.03 * mm},	210 : {'x' : -192.84 * mm, 'y' : -40.99 * mm},
                    211 : {'x' : 197.15 * mm, 'y' : 0.00 * mm},	212 : {'x' : 193.53 * mm, 'y' : 37.62 * mm},
                    213 : {'x' : 182.79 * mm, 'y' : 73.85 * mm},	214 : {'x' : 165.34 * mm, 'y' : 107.38 * mm},
                    215 : {'x' : 139.41 * mm, 'y' : 139.41 * mm},	216 : {'x' : 110.25 * mm, 'y' : 163.44 * mm},
                    217 : {'x' : 77.03 * mm, 'y' : 181.48 * mm},	218 : {'x' : 40.99 * mm, 'y' : 192.84 * mm},
                    219 : {'x' : 0.00 * mm, 'y' : 197.15 * mm},	220 : {'x' : -37.62 * mm, 'y' : 193.53 * mm},
                    221 : {'x' : -73.85 * mm, 'y' : 182.79 * mm},	222 : {'x' : -107.38 * mm, 'y' : 165.34 * mm},
                    223 : {'x' : -139.41 * mm, 'y' : 139.41 * mm},	224 : {'x' : -163.44 * mm, 'y' : 110.25 * mm},
                    225 : {'x' : -181.48 * mm, 'y' : 77.03 * mm},	226 : {'x' : -192.84 * mm, 'y' : 40.99 * mm},
                    227 : {'x' : -197.15 * mm, 'y' : 0.00 * mm},	228 : {'x' : -193.53 * mm, 'y' : -37.62 * mm},
                    229 : {'x' : -182.79 * mm, 'y' : -73.85 * mm},	230 : {'x' : -165.34 * mm, 'y' : -107.38 * mm},
                    231 : {'x' : -139.41 * mm, 'y' : -139.41 * mm},	232 : {'x' : -110.25 * mm, 'y' : -163.44 * mm},
                    233 : {'x' : -77.03 * mm, 'y' : -181.48 * mm},	234 : {'x' : -40.99 * mm, 'y' : -192.84 * mm},
                    235 : {'x' : 0.00 * mm, 'y' : -197.15 * mm},	236 : {'x' : 37.62 * mm, 'y' : -193.53 * mm},
                    237 : {'x' : 73.85 * mm, 'y' : -182.79 * mm},	238 : {'x' : 107.38 * mm, 'y' : -165.34 * mm},
                    239 : {'x' : 139.41 * mm, 'y' : -139.41 * mm},	240 : {'x' : 163.44 * mm, 'y' : -110.25 * mm},
                    241 : {'x' : 181.48 * mm, 'y' : -77.03 * mm},	242 : {'x' : 192.84 * mm, 'y' : -40.99 * mm},
                    }


# PMT gains taken from gain database (around 20120402?)
# A few of these gains are zero: we'll assume these PMTs are turned off.
# PMT 0 does not exist (real Xenon100 PMTs start from 0), so it gets gain 0.
gains = { 0:0, 1: 2715400, 2: 2875650, 3: 1941550, 4: 2068200, 5: 1886150, 6: 1868400, 7: 2152300, 8: 1906050,
          9: 0, 10: 2055000, 11: 1930250, 12: 0, 13: 1965000, 14: 2111900, 15: 2169650, 16: 2219450, 17: 2096400,
          18: 2097900, 19: 2108850, 20: 2092000, 21: 1989150, 22: 2040950, 23: 1637300, 24: 1945750, 25: 2170050,
          26: 2192580, 27: 1982450, 28: 1942100, 29: 2237050, 30: 2152150, 31: 2222250, 32: 2216050, 33: 1335300,
          34: 2068850, 35: 2079500, 36: 2141900, 37: 2046050, 38: 2008500, 39: 0, 40: 2060950, 41: 1943350,
          42: 1855350, 43: 2057200, 44: 2000850, 45: 1934950, 46: 2178750, 47: 2024650, 48: 2068700, 49: 2155750,
          50: 2110050, 51: 2144400, 52: 1941400, 53: 2114150, 54: 2051850, 55: 2215000, 56: 2081950, 57: 2165650,
          58: 0, 59: 2260550, 60: 2156850, 61: 2048350, 62: 2087100, 63: 1966400, 64: 2221700, 65: 2099600,
          66: 2133950, 67: 2048450, 68: 2146666, 69: 2206800, 70: 2231100, 71: 2145450, 72: 2231700, 73: 2199000,
          74: 2051600, 75: 1968400, 76: 2069050, 77: 1978400, 78: 1949900, 79: 2088250, 80: 2228600, 81: 2172150,
          82: 1985350, 83: 2095200, 84: 1955900, 85: 1883350, 86: 1978250, 87: 2121750, 88: 1836000, 89: 2123250,
          90: 2026111, 91: 2272600, 92: 2215750, 93: 2152050, 94: 1915650, 95: 1877750, 96: 2345450, 97: 2164900,
          98: 1954600, 99: 1856200, 100: 0, 101: 1957500, 102: 2281000, 103: 1999400, 104: 1909750, 105: 0,
          106: 1732550, 107: 2112500, 108: 1915900, 109: 2013850, 110: 2123900, 111: 1961950, 112: 1821350,
          113: 1899500, 114: 1808000, 115: 2129950, 116: 2012450, 117: 1941950, 118: 2053850, 119: 2005100,
          120: 1991250, 121: 1830500, 122: 1952150, 123: 2002750, 124: 2108100, 125: 1940100, 126: 1954250,
          127: 1969100, 128: 2188000, 129: 2142850, 130: 2057600, 131: 2209300, 132: 2144350, 133: 2033300,
          134: 1932400, 135: 1966950, 136: 1973500, 137: 1897850, 138: 2088700, 139: 1663000, 140: 2242900,
          141: 1717450, 142: 1956350, 143: 1894600, 144: 1898050, 145: 1677300, 146: 1996350, 147: 1811250,
          148: 1672200, 149: 1890050, 150: 2103400, 151: 1672650, 152: 1969150, 153: 2161000, 154: 1774550,
          155: 1932550, 156: 1813000, 157: 1938070, 158: 2020900, 159: 2047600, 160: 1821350, 161: 1791450,
          162: 1720900, 163: 2051950, 164: 1903850, 165: 1801900, 166: 1995750, 167: 1550250, 168: 1200800,
          169: 1896100, 170: 2005250, 171: 2022750, 172: 1835500, 173: 1922250, 174: 1948900, 175: 2090300,
          176: 1910550, 177: 0, 178: 1831350, 179: 2012100, 180: 2074300, 181: 2502050, 182: 1339200,
          183: 1814200, 184: 1895530, 185: 1975050, 186: 2047850, 187: 1946850, 188: 2144300, 189: 2000100,
          190: 2017750, 191: 0, 192: 1942150, 193: 2117550, 194: 1529950, 195: 0, 196: 1923750, 197: 1749050,
          198: 1940300, 199: 1971950, 200: 1919150, 201: 1888400, 202: 2184450, 203: 2163800, 204: 1983700,
          205: 2010900, 206: 2055700, 207: 1984900, 208: 2045150, 209: 2132550, 210: 1791500, 211: 2050600,
          212: 2000600, 213: 2039950, 214: 1831400, 215: 2035350, 216: 1759010, 217: 2062300, 218: 2111100,
          219: 1945900, 220: 1973750, 221: 2177800, 222: 1914600, 223: 1981400, 224: 0, 225: 1994150, 226: 2069750,
          227: 2201250, 228: 2069300, 229: 1964850, 230: 1938750, 231: 1972100, 232: 1869500, 233: 1995650,
          234: 2149150, 235: 0, 236: 2113400, 237: 1804800, 238: 1921700, 239: 1805550, 240: 1898200, 241: 1893470,
          242: 190140
          }

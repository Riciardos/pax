# Config file for automatic testing at travis-ci.org

language: python

python:
  - "3.4"

notifications:
  email:
    - ctunnell@nikhef.nl
    - jaalbers@nikhef.nl
    - bartp@nikhef.nl

services:
  - mongodb

env:
  - ROOT=5.34.25
  - ROOT=6.03.04
  

os:
  - osx
  - linux

install:
  - deactivate
  - echo ${TRAVIS_OS_NAME}
  - source travis/${TRAVIS_OS_NAME}_setup.sh
  - gcc --version

  # Conda
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then wget -nv http://repo.continuum.io/miniconda/Miniconda3-3.9.1-Linux-x86_64.sh -O miniconda.sh; fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then wget -nv http://repo.continuum.io/miniconda/Miniconda3-3.9.1-MacOSX-x86_64.sh -O miniconda.sh; fi
  
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a # Useful for debugging any issues with conda
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib pandas pytables cython h5py numba pip scikit-learn
  - source activate test-environment
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then conda remove libpng libtiff sqlite; fi
  - pip install coveralls nose coverage

  # ROOT 
  # - unset ROOT # uncomment to not install ROOT
  # - if test -n "$ROOT"; then source travis/install-ROOT.sh; fi
  - if test -n "$ROOT"; then source travis/install-ROOT-binary.sh; fi
  #- source travis/save-ROOT.sh

  # Copy modified ROOT.py to proper directory
  - if [ "${ROOT}" == "6.02.05" ]; then cp /home/travis/build/XENON1T/pax/travis/modified_ROOT_v${ROOT}.py /home/travis/build/XENON1T/pax/root-6.02.05/lib/ROOT.py; fi
  - if [ "${ROOT}" == "5.34.25" ]; then cp /home/travis/build/XENON1T/pax/travis/modified_ROOT_v${ROOT}.py /home/travis/build/XENON1T/pax/root/lib/ROOT.py; fi

  # Does pyROOT still work?
  - root -l -q
  - python -c "import ROOT; ROOT.TBrowser()"

  # Install pax
  - python setup.py install

# command to run tests, e.g. python setup.py test
script:
  - make test
#  - make coverage
  - make lint

#after_success:
#  - coveralls

